@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.Web.Virtualization
@using Microsoft.JSInterop
@using ProcessPulse.App 
@using ProcessPulse.App.Shared 

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(MauiProgram).Assembly" PreferExactMatches="@true">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    @if (!context.User.Identity?.IsAuthenticated ?? false)
                    {
                        <RedirectToLogin />
                    }
                    else
                    {
                        <p>Nie masz uprawnień do przeglądania tej strony.</p>
                    }
                </NotAuthorized>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <h3>Przepraszamy, nie można znaleźć strony.</h3>
                <NavLink href="/">Powrót do strony głównej</NavLink>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }

    private RenderFragment RedirectToLogin => builder =>
    {
        builder.OpenComponent<CascadingValue<Task<AuthenticationState>>>(0);
        builder.AddAttribute(1, "Value", AuthenticationStateTask);
        builder.AddAttribute(2, "ChildContent", (RenderFragment)((childBuilder) =>
        {
            childBuilder.OpenComponent<RedirectToLoginComponent>(3);
            childBuilder.CloseComponent();
        }));
        builder.CloseComponent();
    };
}

@code {
    public class RedirectToLoginComponent : ComponentBase
    {
        [Inject]
        public NavigationManager NavigationManager { get; set; }

        protected override void OnInitialized()
        {
            NavigationManager.NavigateTo("login");
        }
    }
}