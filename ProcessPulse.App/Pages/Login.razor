@page "/"
@page "/login"
@using GearCode.Common.Auth.Forms.Model
@using GearCode.Common.Auth.Forms.Services
@using GearCode.Common.Auth.Forms
@using GC.Auth.Permissions
@using ProcessPulse.Class.ProcessPulse.Models


<div class="container my-4 login-container">
    <h3 class="mb-3 text-center">Logowanie</h3>
    @if (IdentityManager.CurrentIdentity != null)
    {
        <div class="text-center">
            <p class="lead">Witaj, @IdentityManager.CurrentIdentity.DisplayName</p>
            <button class="btn btn-primary btn-lg mb-2" @onclick="SignOut">Wyloguj</button>
            <button class="btn btn-secondary btn-lg mb-2" @onclick="ShowIdentityTenant">Pokaż Identity Tenant</button>
            <button class="btn btn-info btn-lg mb-2" @onclick="CheckPermission">Sprawdź Uprawnienie ALLOW_MDM_APP</button>
            <div class="mt-3">
                <input class="form-control" @bind="additionalProperty" />
                <button class="btn btn-outline-primary mt-2" @onclick="ShowAdditionalProperty">Pokaż wartość właściwości</button>
                <p class="mt-2">@additionalPropertyMessage</p>
            </div>
        </div>
    }
    else
    {
        <div class="text-center">
            <button class="btn btn-primary btn-lg" @onclick="SignIn">Zaloguj</button>
            <div class="form-check mt-3">
                <input class="form-check-input" type="checkbox" @bind="gearcodeSignInChecked" id="gearcodeCheck" />
                <label class="form-check-label" for="gearcodeCheck">
                    Direct signing in (GearCode)
                </label>
            </div>
        </div>
    }
</div>

<style>
    .login-container {
        max-width: 500px;
        margin: 0 auto;
        padding: 20px;
        border: 1px solid #dee2e6;
        border-radius: 15px;
        background-color: #f8f9fa;
        box-shadow: 0 4px 6px rgba(0,0,0,.1);
    }
</style>
@code {
    private string message = "";
    private string additionalProperty = "";
    private string additionalPropertyMessage = "";
    private bool gearcodeSignInChecked;

    private async Task SignIn()
    {
        try
        {
            var status = await IdentityManager.SignInUserAsync();
            message = $"Status logowania: {status}";
        }
        catch (Exception ex)
        {
            message = $"Błąd logowania: {ex.Message}";
        }
        StateHasChanged();
    }

    private async Task SignOut()
    {
        try
        {
            await IdentityManager.SignOutUser();
            message = "Wylogowano.";
        }
        catch (Exception ex)
        {
            message = $"Błąd wylogowania: {ex.Message}";
        }
        StateHasChanged();
    }

    private void ShowIdentityTenant()
    {
        message = $"Identity Tenant: {IdentityManager.IdentityTenant}";
    }

    private void CheckPermission()
    {
        var hasPermission = IdentityManager.HasPermission(GearCodePermissions.ALLOW_MDM_APP);
        message = hasPermission ? "Użytkownik ma uprawnienie ALLOW_MDM_APP." : "Użytkownik nie ma uprawnienia ALLOW_MDM_APP.";
    }
    private void ShowAdditionalProperty()
    {
        additionalPropertyMessage = "Wartość dodatkowej właściwości: " + additionalProperty;
    }
    private void OnGearcodeSignInCheckedChanged(ChangeEventArgs e)
    {
        var isChecked = (bool)e.Value;
        message = isChecked ? "Gearcode Sign In zaznaczone." : "Gearcode Sign In odznaczone.";
    }
}
