@page "/safo-status"
@attribute [Authorize]
@using Microsoft.AspNetCore.Authorization;
@using ProcessPulse.App.Services
@using ProcessPulse.Class.ProcessPulse.Models

@inject ApiService ApiService

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <div class="card shadow-lg mb-5 border-0 rounded-lg">
                <div class="card-header bg-purple text-white">
                    <h4 class="my-0">Status Łączności SAFO i NAV</h4>
                </div>
                <div class="card-body">
                    <div class="text-center mb-4">
                        <button class="btn btn-purple btn-lg" @onclick="CheckConnectivity">
                            Sprawdź łączność
                        </button>
                    </div>

                    @if (isLoading)
                    {
                        <div class="text-center">
                            <div class="spinner-border text-purple" role="status">
                                <span class="sr-only"></span>
                            </div>
                        </div>
                    }
                    else if (loadSuccess)
                    {
                        <table class="table table-striped table-bordered">
                            <thead class="bg-light">
                                <tr>
                                    <th>Data</th>
                                    <th>Status Łączności z SAFO</th>
                                    <th>Status Łączności z NAV</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in safoData)
                                {
                                    <tr>
                                        <td>@item.Data</td>
                                        <td>
                                            @if (item.IsConnectedSafo)
                                            {
                                                <span class="badge bg-success">Połączony</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">Rozłączony</span>
                                            }
                                        </td>
                                        <td>
                                            @if (item.IsConnectedNav)
                                            {
                                                <span class="badge bg-success">Połączony</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">Rozłączony</span>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else if (loadError)
                    {
                        <div class="alert alert-danger" role="alert">
                            Wystąpił błąd łączności.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    body {
        background-color: #f8f9fa;
        font-family: 'Open Sans', sans-serif;
    }

    .bg-purple {
        background-color: #6f42c1;
    }

    .btn-purple {
        background-color: #6f42c1;
        color: white;
        border: none;
        transition: transform 0.2s, box-shadow 0.2s;
    }

        .btn-purple:hover {
            transform: scale(1.05);
            box-shadow: 0 5px 15px rgba(111, 66, 193, 0.4);
        }

    .spinner-border.text-purple {
        color: #6f42c1;
    }

    .card {
        background-color: #fff; 
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); 
    }
</style>

@code {
    private List<SafoModel> safoData;
    private bool isLoading = false;
    private bool loadSuccess = false;
    private bool loadError = false;

    private async Task CheckConnectivity()
    {
        isLoading = true;
        loadSuccess = false;
        loadError = false;

        try
        {
            safoData = await ApiService.GetSafoDataAsync(); 
            loadSuccess = true;
        }
        catch
        {
            loadError = true;
        }
        finally
        {
            isLoading = false;
        }
    }
}